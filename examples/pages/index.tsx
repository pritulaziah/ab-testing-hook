import type { NextPage, GetServerSideProps } from "next";
import Head from "next/head";
import { v4 as uuidv4 } from "uuid";
import MyExperiment from "../components/MyExperiment";
import { IExperiment, IExperimentGroup, ABTestProvider } from "ab-testing-hook";
import { useState } from "react";
import { PieChart } from "react-minimal-pie-chart";

// For example enum
enum Devices {
  Desktop = "desktop",
  Mobile = "mobile",
  Tablet = "tablet",
}

interface MyExperimentGroup extends IExperimentGroup {
  id: number;
}

interface IMyExperiment extends Omit<IExperiment, "groups"> {
  devices: Devices[];
  groups: MyExperimentGroup[];
}

interface IProps {
  userId: string;
  experiments: IMyExperiment[];
}

const getColor = (index: number) => {
  const colors = ["#EC6B56", "#FFC154", "#47B39C", "#C13C37", "#6A2135"];

  return colors[index];
}

const Home: NextPage<IProps> = ({ userId, experiments }) => {
  const [exampleUserId, setExampleUserId] = useState(userId);
  const [exampleExperiment] = experiments;

  return (
    <ABTestProvider
      userId={exampleUserId}
      experiments={exampleExperiment}
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="max-w-screen-xl flex flex-col w-full mx-auto p-14">
        <div className="mb-10">
          <div className="flex flex-col items-start mb-4 lg:flex-row lg:items-center">
            <div className="text-lg text-slate-800 mb-2 lg:mb-0">
              Your userid: <span className="font-medium">{exampleUserId}</span>.
            </div>
            <button
              className="py-2 px-4 text-sm rounded-lg font-medium text-white bg-blue-700 hover:bg-blue-800 transition-colors lg:ml-2"
              onClick={() => setExampleUserId(uuidv4())}
            >
              Click to change uuid
            </button>
          </div>
          <div className="flex flex-col">
            <h4 className="text-md text-slate-800 mb-2 font-medium">Example experiment: {exampleExperiment.name}</h4>
            <div className="flex">
              <div className="w-60 h-auto">
                <PieChart
                  data={exampleExperiment.groups.map((group, index) => ({
                    title: group.name,
                    value: group.weight,
                    color: getColor(index),
                  }))}
                  label={({ dataEntry }) =>
                    `${dataEntry.title}: ${Math.round(dataEntry.percentage)}%`
                  }
                  labelStyle={{
                    fontSize: "6px",
                  }}
                />
              </div>

            </div>
          </div>
        </div>
        <MyExperiment />
      </div>
    </ABTestProvider>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  // from cookie get user identifier if dont have generate and set
  const userId = uuidv4();
  // from backend get experiments, filtering by device, statuses, etc
  const experiments: IMyExperiment[] = [
    {
      devices: [Devices.Desktop],
      name: "new_button",
      groups: [
        {
          id: 1,
          name: "variantA",
          weight: 0.4, // 40%
        },
        {
          id: 2,
          name: "variantB",
          weight: 0.6, // 60%,
        },
      ],
      trafficPercentRange: [0.2, 0.7], // 50%
    },
  ];

  return { props: { userId, experiments } };
};

export default Home;
